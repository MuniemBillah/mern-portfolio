REACT_APP_API_URL=http://localhost:5000/api
```

This file is ONLY for local development. Vercel uses the environment variables you set in the dashboard.

---

## **4. Backend server.js is in backend folder**

The `server.js` is in the **backend folder**, NOT frontend! 

Your folder structure should be:
```
mern-portfolio/
├── backend/
│   ├── server.js          ← This is your backend server
│   ├── package.json
│   └── ...
└── frontend/
    ├── src/
    ├── public/
    ├── package.json
    └── .env               ← Just for local dev
```

---

## **5. Complete Vercel Deployment Steps**

### **Step 1: Go to Vercel**
- Visit [vercel.com](https://vercel.com/)
- Sign in with GitHub

### **Step 2: Import Project**
- Click **"Add New..."** → **"Project"**
- Select your `portfolio-frontend` repository

### **Step 3: Configure Project**

Fill in these exact values:

| Setting | Value |
|---------|-------|
| **Framework Preset** | `Create React App` |
| **Root Directory** | `./` |
| **Build Command** | `npm run build` |
| **Output Directory** | `build` |
| **Install Command** | `npm install` |

### **Step 4: Environment Variables**

Click **"Environment Variables"** section and add:
```
Name: REACT_APP_API_URL
Value: https://YOUR-RENDER-URL.onrender.com/api
```

**Replace `YOUR-RENDER-URL` with your actual backend URL!**

### **Step 5: Deploy**

Click **"Deploy"** button and wait 2-5 minutes.

---

## **6. If You Don't Have Backend Deployed Yet**

If you haven't deployed backend to Render yet, you can temporarily use:
```
REACT_APP_API_URL=http://localhost:5000/api
```

This way your frontend will deploy, but won't work until you deploy the backend.

---

## **7. After Deployment**

Once deployed, Vercel will give you a URL like:
```
https://portfolio-frontend-xxxx.vercel.app